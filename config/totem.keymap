//
//                                                        ▀▀▀▀▀     ▀▀▀▀▀          ▀▀█▀▀
//                                                        ▄▀▀▀▄  ▄  ▄▀▀▀▄  ▄  ▄▀▀▀▄  █  ▄▀▀▀▄
//                                                        █   █  █  █   █  █  █   █  █  █   █
//                                                         ▀▀▀   █   ▀▀▀   █   ▀▀▀   ▀   ▀▀▀
//                                                               █      ▄▄▄█▄▄▄    █   █
//                                                               ▀      █  █  █     █▄█
//                                                             ▀▀▀▀▀    █  █  █      ▀
//                                                                      ▀  ▀  ▀
//
// ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄

#include <behaviors/mouse_keys.dtsi>
#include <dt-bindings/zmk/mouse.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>


#define BASE 0
#define NAV  1
#define DIG  2
#define SYS  3
#define QUICK_TAP_MS 175

&mt {
    quick-tap-ms = <100>;
    global-quick-tap;
    flavor = "tap-preferred";
    tapping-term-ms = <170>;
};

/ {
    combos {
        compatible = "zmk,combos";

        leftbracket {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <24 27>;
            timeout-ms = <30>;
        };

        rightbracket {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <23 28>;
            timeout-ms = <30>;
        };

        leftparenthesis {
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <13 16>;
            timeout-ms = <30>;
        };

        rightparenthesis {
            bindings = <&kp RIGHT_PARENTHESIS>;
            key-positions = <12 17>;
            timeout-ms = <30>;
        };

        leftcurly {
            bindings = <&kp LEFT_BRACE>;
            key-positions = <3 6>;
            timeout-ms = <30>;
        };

        rightcurly {
            bindings = <&kp RIGHT_BRACE>;
            key-positions = <2 7>;
            timeout-ms = <30>;
        };

        equals {
            bindings = <&kp EQUAL>;
            key-positions = <2 3>;
            timeout-ms = <30>;
        };

        dash {
            bindings = <&kp MINUS>;
            key-positions = <6 7>;
            timeout-ms = <30>;
        };

        quote {
            bindings = <&kp SQT>;
            key-positions = <16 17>;
            timeout-ms = <30>;
        };

        mousewarp {
            bindings = <&kp LA(LG(Z))>;
            key-positions = <34 35>;
            timeout-ms = <30>;
        };

        lefttab {
            bindings = <&kp LC(LS(TAB))>;
            key-positions = <12 11>;
            timeout-ms = <30>;
        };

        righttab {
            bindings = <&kp LC(TAB)>;
            key-positions = <17 18>;
            timeout-ms = <30>;
        };

        movetableft {
            bindings = <&kp LC(LS(PAGE_UP))>;
            key-positions = <22 23>;
            timeout-ms = <30>;
        };

        movetabright {
            bindings = <&kp LC(LS(PAGE_DOWN))>;
            key-positions = <28 29>;
            timeout-ms = <30>;
        };

        grave {
            bindings = <&kp GRAVE>;
            key-positions = <23 24>;
        };

        backslash {
            bindings = <&kp BACKSLASH>;
            key-positions = <27 28>;
        };

        tab {
            bindings = <&kp TAB>;
            key-positions = <12 13>;
        };
    };

    behaviors {
        hml: hml {
            compatible = "zmk,behavior-hold-tap";
            label = "HML";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <250>;
            flavor = "tap-preferred";
            hold-trigger-on-release;
        };

        hmr: hmr {
            compatible = "zmk,behavior-hold-tap";
            label = "HMR";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <250>;
            flavor = "tap-preferred";
            hold-trigger-on-release;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        QWERTY {
            label = "BASE";
            bindings = <
       &kp Q    &kp W  &kp E          &kp R                 &kp T                      &kp Y                &kp U                    &kp I          &kp O    &kp P
       &kp A    &kp S  &hml LCTRL D   &hml LEFT_SHIFT F     &hml LS(LEFT_CONTROL) G    &hmr LEFT_ALT H      &hmr LEFT_SHIFT J        &hmr LCTRL K   &kp L    &kp SEMICOLON
&to 1  &lt 3 Z  &kp X  &kp C          &hml LEFT_GUI V       &hml LS(LEFT_GUI) B        &hmr LS(LEFT_GUI) N  &hmr LEFT_GUI M          &kp COMMA      &kp DOT  &lt 3 SLASH    &to 2
                       &kp LG(LC(Q))  &hml LEFT_ALT ESCAPE  &lt 1 SPACE                &lt 2 ENTER          &hmr LEFT_ALT BACKSPACE  &kp LA(LG(Z))
            >;
        };

        Navigation {
            label = "Navigation";
            bindings = <
       &none  &none  &none         &none      &none            &kp LG(LEFT)    &kp LC(LEFT)    &kp LC(RIGHT)  &kp LG(RIGHT)    &none
       &none  &none  &kp LEFT_GUI  &kp LSHFT  &kp LEFT_ALT     &kp LEFT        &kp DOWN        &kp UP_ARROW   &kp RIGHT        &msc SCRL_UP
&to 0  &none  &none  &none         &kp LCTRL  &kp LS(LCTRL)    &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_UP   &mmv MOVE_RIGHT  &msc SCRL_DOWN  &kp CAPSLOCK
                     &none         &trans     &trans           &mkp LCLK       &mkp RCLK       &none
            >;
        };

        digits {
            label = "Digits";
            bindings = <
            &kp C_PREVIOUS    &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp C_VOLUME_UP      &none                 &none           &none         &none  &none
            &kp C_NEXT        &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp NUMBER_0         &kp LEFT_ALT          &kp LEFT_SHIFT  &kp LEFT_GUI  &none  &none
&kp C_MUTE  &kp C_PLAY_PAUSE  &kp N7        &kp N8        &kp N9        &kp C_VOLUME_DOWN    &kp LS(LEFT_CONTROL)  &kp LCTRL       &none         &none  &none  &to 0
                                            &trans        &trans        &trans               &trans                &trans          &trans
            >;
        };

        sim_layer {
            label = "SYSTEM";
            bindings = <
       &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4      &none        &none  &none  &none  &none
       &none         &none         &none         &bt BT_CLR    &bt BT_CLR_ALL    &none        &none  &none  &none  &none
&none  &none         &none         &none         &none         &bootloader       &bootloader  &none  &none  &none  &none  &none
                                   &none         &none         &none             &none        &none  &none
            >;
        };
    };
};
